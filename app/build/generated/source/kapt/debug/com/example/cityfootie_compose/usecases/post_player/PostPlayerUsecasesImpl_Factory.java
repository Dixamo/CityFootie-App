// Generated by Dagger (https://dagger.dev).
package com.example.cityfootie_compose.usecases.post_player;

import com.example.cityfootie_compose.datasource.FootieRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PostPlayerUsecasesImpl_Factory implements Factory<PostPlayerUsecasesImpl> {
  private final Provider<FootieRepository> footieRepositoryProvider;

  public PostPlayerUsecasesImpl_Factory(Provider<FootieRepository> footieRepositoryProvider) {
    this.footieRepositoryProvider = footieRepositoryProvider;
  }

  @Override
  public PostPlayerUsecasesImpl get() {
    return newInstance(footieRepositoryProvider.get());
  }

  public static PostPlayerUsecasesImpl_Factory create(
      Provider<FootieRepository> footieRepositoryProvider) {
    return new PostPlayerUsecasesImpl_Factory(footieRepositoryProvider);
  }

  public static PostPlayerUsecasesImpl newInstance(FootieRepository footieRepository) {
    return new PostPlayerUsecasesImpl(footieRepository);
  }
}
